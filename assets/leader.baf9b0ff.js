(function(){"use strict";function K(s){if(s.__esModule)return s;var f=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(s).forEach(function(t){var e=Object.getOwnPropertyDescriptor(s,t);Object.defineProperty(f,t,e.get?e:{enumerable:!0,get:function(){return s[t]}})}),f}var A={exports:{}},w={exports:{}},O={exports:{}},P={exports:{}},y={exports:{}},S={exports:{}};(function(s,f){s.exports.condition_list=["int","float","str","cpf","cnpj","gender","id","firstName","lastName","fullName","text","money","address","color","random","maskInt"],s.exports.full_names_list=["Quinn Robles","Dae Figueroa","Jesse Austin","August Case","Elliott Webster","Hildred Patrick","Taylor Bright","Jean Boyd","Kendall Stafford","Asra Simmons","Tandy Christensen","Rory Sexton","Lila Mccray","Emery Nolan","Savage Compton","Shawn Burke","Tracy Newman","Shiloh Tran","Rowan Herring","Mildred Church","Harper Foreman","Kaylor William","Gray Norris","Riley Kline","Donovan Hutchinson","Young Harrison","Bailey Lott","Vasquez Robbins","Nico Harding","Chance Alexander","Addison Allen","Campbell Bryant","Farren West","Jamie Solomon","Sage Fox","Charity Rush","Nico Gould","Hill Meadows","Jody Kramer","Gomez Guthrie","Jude Battle","Bates Black","Jody Newton","Embry Grant","Jo Rosales","Jody Langley","Leslie Ellison","Rojas Kelly","Parker Phillips","Duffy Reed"],s.exports.lorem=["lorem","ipsum","dolor","sit","amet,","consectetur","adipiscing","elit","ut","aliquam,","purus","sit","amet","luctus","venenatis,","lectus","magna","fringilla","urna,","porttitor","rhoncus","dolor","purus","non","enim","praesent","elementum","facilisis","leo,","vel","fringilla","est","ullamcorper","eget","nulla","facilisi","etiam","dignissim","diam","quis","enim","lobortis","scelerisque","fermentum","dui","faucibus","in","ornare","quam","viverra","orci","sagittis","eu","volutpat","odio","facilisis","mauris","sit","amet","massa","vitae","tortor","condimentum","lacinia","quis","vel","eros","donec","ac","odio","tempor","orci","dapibus","ultrices","in","iaculis","nunc","sed","augue","lacus,","viverra","vitae","congue","eu,","consequat","ac","felis","donec","et","odio","pellentesque","diam","volutpat","commodo","sed","egestas","egestas","fringilla","phasellus","faucibus","scelerisque","eleifend","donec","pretium","vulputate","sapien","nec","sagittis","aliquam","malesuada","bibendum","arcu","vitae","elementum","curabitur","vitae","nunc","sed","velit","dignissim","sodales","ut","eu","sem","integer","vitae","justo","eget","magna","fermentum","iaculis","eu","non","diam","phasellus","vestibulum","lorem","sed","risus","ultricies","tristique","nulla","aliquet","enim","tortor,","at","auctor","urna","nunc","id","cursus","metus","aliquam","eleifend","mi","in","nulla","posuere","sollicitudin","aliquam","ultrices","sagittis","orci,","a","scelerisque","purus","semper","eget","duis","at","tellus","at","urna","condimentum","mattis","pellentesque","id","nibh","tortor,","id","aliquet","lectus","proin","nibh","nisl,","condimentum","id","venenatis","a,","condimentum","vitae","sapien","pellentesque","habitant","morbi","tristique","senectus","et","netus","et","malesuada","fames","ac","turpis","egestas","sed","tempus,","urna","et","pharetra","pharetra,","massa","massa","ultricies","mi,","quis","hendrerit","dolor","magna","eget","est","lorem","ipsum","dolor","sit","amet,","consectetur","adipiscing","elit","pellentesque","habitant","morbi","tristique","senectus","et","netus","et","malesuada","fames","ac","turpis","egestas","integer","eget","aliquet","nibh","praesent","tristique","magna","sit","amet","purus","gravida","quis","blandit","turpis","cursus","in","hac","habitasse","platea","dictumst","quisque","sagittis,","purus","sit","amet","volutpat","consequat,","mauris","nunc","congue","nisi,","vitae","suscipit","tellus","mauris","a","diam","maecenas","sed","enim","ut","sem","viverra","aliquet","eget","sit","amet","tellus","cras","adipiscing","enim","eu","turpis","egestas","pretium","aenean","pharetra,","magna","ac","placerat","vestibulum,","lectus","mauris","ultrices","eros,","in","cursus","turpis","massa","tincidunt","dui","ut","ornare","lectus","sit","amet","est","placerat","in","egestas","erat","imperdiet","sed","euismod","nisi","porta","lorem","mollis","aliquam","ut","porttitor","leo","a","diam","sollicitudin","tempor","id","eu","nisl","nunc","mi","ipsum,","faucibus","vitae","aliquet","nec,","ullamcorper","sit","amet","risus","nullam","eget","felis","eget","nunc","lobortis","mattis","aliquam","faucibus","purus","in","massa","tempor","nec","feugiat","nisl","pretium","fusce","id","velit","ut","tortor","pretium","viverra","suspendisse","potenti","nullam","ac","tortor","vitae","purus","faucibus","ornare","suspendisse","sed","nisi","lacus,","sed","viverra","tellus","in","hac","habitasse","platea","dictumst","vestibulum","rhoncus","est","pellentesque","elit","ullamcorper","dignissim","cras","tincidunt","lobortis","feugiat","vivamus","at","augue","eget","arcu","dictum","varius","duis","at","consectetur","lorem","donec","massa","sapien,","faucibus","et","molestie","ac,","feugiat","sed","lectus","vestibulum","mattis","ullamcorper","velit","sed","ullamcorper","morbi","tincidunt","ornare","massa,","eget","egestas","purus","viverra","accumsan","in","nisl","nisi,","scelerisque","eu","ultrices","vitae,","auctor","eu","augue","ut","lectus","arcu,","bibendum","at","varius","vel,","pharetra","vel","turpis","nunc","eget","lorem","dolor,","sed","viverra","ipsum","nunc","aliquet","bibendum","enim,","facilisis","gravida","neque","convallis","a","cras","semper","auctor","neque,","vitae","tempus","quam","pellentesque","nec","nam","aliquam","sem","et","tortor","consequat","id","porta","nibh","venenatis","cras","sed","felis","eget","velit","aliquet","sagittis","id","consectetur","purus","ut","faucibus","pulvinar","elementum","integer","enim","neque,","volutpat","ac","tincidunt","vitae,","semper","quis","lectus","nulla","at","volutpat","diam","ut","venenatis","tellus","in","metus","vulputate","eu","scelerisque","felis","imperdiet","proin","fermentum","leo","vel","orci","porta","non","pulvinar","neque","laoreet","suspendisse","interdum","consectetur","libero,","id","faucibus","nisl","tincidunt","eget","nullam","non","nisi","est,","sit","amet","facilisis","magna","etiam","tempor,","orci","eu","lobortis","elementum,","nibh","tellus","molestie","nunc,","non","blandit","massa","enim","nec","dui","nunc","mattis","enim","ut","tellus","elementum","sagittis","vitae","et","leo","duis","ut","diam","quam","nulla","porttitor","massa","id","neque","aliquam","vestibulum","morbi","blandit","cursus","risus,","at","ultrices","mi","tempus","imperdiet","nulla","malesuada","pellentesque","elit","eget","gravida","cum","sociis","natoque","penatibus","et","magnis","dis","parturient","montes,","nascetur","ridiculus","mus","mauris","vitae","ultricies","leo","integer","malesuada","nunc","vel","risus","commodo","viverra","maecenas","accumsan,","lacus","vel","facilisis","volutpat,","est","velit","egestas","dui,","id","ornare","arcu","odio","ut","sem","nulla","pharetra","diam","sit","amet","nisl","suscipit","adipiscing","bibendum","est","ultricies","integer","quis","auctor","elit","sed","vulputate","mi","sit","amet","mauris","commodo","quis","imperdiet","massa","tincidunt","nunc","pulvinar","sapien","et","ligula","ullamcorper","malesuada","proin","libero","nunc,","consequat","interdum","varius","sit","amet,","mattis","vulputate","enim","nulla","aliquet","porttitor","lacus,","luctus","accumsan","tortor","posuere","ac","ut","consequat","semper","viverra","nam","libero","justo,","laoreet","sit","amet","cursus","sit","amet,","dictum","sit","amet","justo","donec","enim","diam,","vulputate","ut","pharetra","sit","amet,","aliquam","id","diam","maecenas","ultricies","mi","eget","mauris","pharetra","et","ultrices","neque","ornare","aenean","euismod","elementum","nisi,","quis","eleifend","quam","adipiscing","vitae","proin","sagittis,","nisl","rhoncus","mattis","rhoncus,","urna","neque","viverra","justo,","nec","ultrices","dui","sapien","eget","mi","proin","sed","libero","enim,","sed","faucibus","turpis","in","eu","mi","bibendum","neque","egestas","congue","quisque","egestas","diam","in","arcu","cursus","euismod","quis","viverra","nibh","cras","pulvinar","mattis","nunc,","sed","blandit","libero","volutpat","sed","cras","ornare","arcu","dui","vivamus","arcu","felis,","bibendum","ut","tristique","et,","egestas","quis","ipsum","suspendisse","ultrices","gravida","dictum","fusce","ut","placerat","orci","nulla","pellentesque","dignissim","enim,","sit","amet","venenatis","urna","cursus","eget","nunc","scelerisque","viverra","mauris,","in","aliquam","sem","fringilla","ut","morbi","tincidunt","augue","interdum","velit","euismod","in","pellentesque","massa","placerat","duis","ultricies","lacus","sed","turpis","tincidunt","id","aliquet","risus","feugiat","in","ante","metus,","dictum","at","tempor","commodo,","ullamcorper","a","lacus","vestibulum","sed","arcu","non","odio","euismod","lacinia","at","quis","risus","sed","vulputate","odio","ut","enim","blandit","volutpat","maecenas","volutpat","blandit","aliquam","etiam","erat","velit,","scelerisque","in","dictum","non,","consectetur","a","erat","nam","at","lectus","urna","duis","convallis","convallis","tellus,","id","interdum","velit","laoreet","id","donec","ultrices","tincidunt","arcu,","non","sodales","neque","sodales","ut","etiam","sit","amet","nisl","purus,","in","mollis","nunc","sed","id","semper","risus","in","hendrerit","gravida","rutrum","quisque","non","tellus","orci,","ac","auctor","augue","mauris","augue","neque,","gravida","in","fermentum","et,","sollicitudin","ac","orci","phasellus","egestas","tellus","rutrum","tellus","pellentesque","eu","tincidunt","tortor","aliquam","nulla","facilisi","cras","fermentum,","odio","eu","feugiat","pretium,","nibh","ipsum","consequat","nisl,","vel","pretium","lectus","quam","id","leo","in","vitae","turpis","massa","sed","elementum","tempus","egestas","sed","sed","risus","pretium","quam","vulputate","dignissim","suspendisse","in","est","ante","in","nibh","mauris,","cursus","mattis","molestie","a,","iaculis","at","erat","pellentesque","adipiscing","commodo","elit,","at","imperdiet","dui","accumsan","sit","amet","nulla","facilisi","morbi","tempus","iaculis","urna,","id","volutpat","lacus","laoreet","non","curabitur","gravida","arcu","ac","tortor","dignissim","convallis","aenean","et","tortor","at","risus","viverra","adipiscing","at","in","tellus","integer","feugiat","scelerisque","varius","morbi","enim","nunc,","faucibus","a","pellentesque","sit","amet,","porttitor","eget","dolor","morbi","non","arcu","risus,","quis","varius","quam","quisque","id","diam","vel","quam","elementum","pulvinar","etiam","non","quam","lacus","suspendisse","faucibus","interdum","posuere","lorem","ipsum","dolor","sit","amet,","consectetur","adipiscing","elit","duis","tristique","sollicitudin","nibh","sit","amet","commodo","nulla","facilisi","nullam","vehicula","ipsum","a","arcu","cursus","vitae","congue","mauris","rhoncus","aenean","vel","elit","scelerisque","mauris","pellentesque","pulvinar","pellentesque","habitant","morbi","tristique","senectus","et","netus","et","malesuada","fames","ac","turpis","egestas","maecenas","pharetra","convallis","posuere","morbi","leo","urna,","molestie","at","elementum","eu,","facilisis","sed","odio","morbi","quis","commodo","odio","aenean","sed","adipiscing","diam","donec","adipiscing","tristique","risus","nec","feugiat","in","fermentum","posuere","urna","nec","tincidunt","praesent","semper","feugiat","nibh","sed","pulvinar","proin","gravida","hendrerit","lectus","a","molestie"],s.exports.streets=["Franklin Avenue","Creamer Street","Clymer Street","Bartlett Place","Norman Avenue","Willow Place","Knapp Street","Cornelia Street","Ditmas Avenue","Williams Place","Grant Avenue","Narrows Avenue","Heath Place","Bleecker Street","Norwood Avenue","Keen Court","Dahlgreen Place","Applegate Court","Poly Place","Navy Walk","Fiske Place","Voorhies Avenue","Blake Court","Columbia Place","Eaton Court","Losee Terrace","Pineapple Street","Catherine Street","Conselyea Street","Newel Street","Belmont Avenue","Cheever Place","Clinton Street","Varick Street","Scholes Street","Roosevelt Place","Hutchinson Court","Kent Avenue","Orient Avenue","Meserole Street","Drew Street","Milford Street","Doscher Street","Anchorage Place","Cove Lane","Noble Street","Lamont Court","Jefferson Street","Downing Street","Matthews Court"],s.exports.cities=["Cloverdale","Collins","Bridgetown","Cherokee","Montura","Fostoria","Oley","Salix","Haring","Falconaire","Matthews","Coultervillle","Idledale","Salunga","Elbert","Stockdale","Sabillasville","Verdi","Whitehaven","Gilmore","Eagleville","Wanship","Esmont","Croom","Greenock","Movico","Buxton","Eagletown","Hemlock","Springville","Vienna","Balm","Kiskimere","Heil","Duryea","Garnet","Tilden","Shindler","Harmon","Falmouth","Klondike","Hoehne","Utting","Munjor","Crucible","Chloride","Belgreen","Clarktown","Omar","Florence"],s.exports.states=["Wisconsin","Palau","Maryland","Florida","Virgin Islands","Puerto Rico","Arkansas","Texas","Colorado","Iowa","New Jersey","Nevada","California","Delaware","North Carolina","Minnesota","Illinois","Pennsylvania","Maine","Marshall Islands","Massachusetts","Missouri","South Carolina","Idaho","Washington","Nebraska","South Dakota","Michigan","Alabama","Georgia","Virginia","American Samoa","Alaska","Kentucky","Tennessee","Montana","Arizona","New Hampshire","Northern Mariana Islands","Wyoming","Federated States Of Micronesia","Connecticut","Guam","Rhode Island","Vermont","District Of Columbia","Oklahoma","North Dakota","Louisiana","Mississippi"],s.exports.countries=["St. Pierre and Miquelon","Sri Lanka","British Indian Ocean Territory","Croatia (Hrvatska)","Spain","Mauritania","Norway","Guinea-Bissau","Cape Verde","Marshall Islands","Zambia","Czech Republic","Bahrain","Georgia","Latvia","Malaysia","Bermuda","Niue","Pakistan","Morocco","Barbados","Virgin Islands (British)","Chad","Trinidad and Tobago","Viet Nam","French Polynesia","Western Sahara","France, Metropolitan","Cuba","Tanzania","Svalbard and Jan Mayen Islands","Honduras","Uruguay","Luxembourg","East Timor","US Minor Outlying Islands","Italy","Bhutan","Myanmar","Guam","Vatican City State (Holy See)","Azerbaijan","Guyana","Bangladesh","Aruba","Monaco","Cote D Ivoire(Ivory Coast)","Jamaica","Falkland Islands (Malvinas)","Andorra"],s.exports.colors=["red","green","blue","cyan","magenta","yellow","orange","chartreuse green","spring green","azure","violet","rose","white","black","brown","grey"]})(S),function(s,f){const t=S.exports.condition_list;s.exports.isSameCondOp=function(e,n){return this.getKey(e)===n},s.exports.getKey=function(e){return e.split(";")[0]},s.exports.isValidCond=function(e){const n=this.getKey(e);return!!n&&t.includes(n)},s.exports.getParams=function(e){return e.replace(" ","").split(";")}}(y);var _={exports:{}};(function(s,f){const t=y.exports;s.exports.getInt=function(e){if(!t.isSameCondOp(e,"int"))return;const n=0,a=Number.MAX_SAFE_INTEGER,u=t.getParams(e),l=parseInt(u[1],10),i=parseInt(u[2],10);parseInt(u[3],10);const o=l||n,r=i||a;return Math.floor(o+Math.random()*(r+1-o))}})(_),function(s,f){const t=y.exports,e=S.exports,n=_.exports;s.exports.getAddress=function(a){if(!t.isSameCondOp(a,"address"))return;const u="number street - city, state, country.",i=a.split(";")[1],o=n.getInt("int;0;49");let r=i||u;return r.includes("number")&&(r=r.replace("number",`${n.getInt("int;10;999")}`)),r.includes("street")&&(r=r.replace("street",e.streets[o])),r.includes("city")&&(r=r.replace("city",e.cities[o])),r.includes("state")&&(r=r.replace("state",e.states[o])),r.includes("country")&&(r=r.replace("country",e.countries[o])),r}}(P);var F={exports:{}},k={exports:{}};(function(s,f){s.exports.onlyLetters=function(t){return t.replace(/[^a-zA-Z]/g,"")},s.exports.onlyNumbers=function(t){return t.replace(/\D+/g,"")},s.exports.isLetter=function(t){return t.toLowerCase()!=t.toUpperCase()},s.exports.capitalize=function(t){return t.charAt(0).toUpperCase()+t.slice(1)}})(k),function(s,f){const t=k.exports;s.exports.getCnpj=function(e=!0){const[n,a,u,l,i,o,r,c]=Array.from(Array(8),function(){return Math.round(Math.random()*8)}),m=0,d=0,g=0,x=1,v=(n*5+a*4+u*3+l*2+i*9+o*8+r*7+c*6+m*5+d*4+g*3+x*2)%11,b=v<2?0:11-v,h=(n*6+a*5+u*4+l*3+i*2+o*9+r*8+c*7+m*6+d*5+g*4+x*3+b*2)%11,q=h<2?0:11-h;return e?`${n}${a}.${u}${l}${i}.${o}${r}${c}/${m}${d}${g}${x}-${b}${q}`:`${n}${a}${u}${l}${i}${o}${r}${c}${m}${d}${g}${x}${b}${q}`},s.exports.isValidCnpj=function(e){if(typeof e!="string")return!1;const n=t.onlyNumbers(e);if(n.length!==14)return!1;const[a,u,l,i,o,r,c,m,d,g,x,v,b,h]=[...n].map(function(C){return parseInt(C,10)}),q=(a*5+u*4+l*3+i*2+o*9+r*8+c*7+m*6+d*5+g*4+x*3+v*2)%11,p=q<2?0:11-q,$=(a*6+u*5+l*4+i*3+o*2+r*9+c*8+m*7+d*6+g*5+x*4+v*3+b*2)%11,I=$<2?0:11-$;return p===b&&I===h}}(F);var E={exports:{}};(function(s,f){const t=y.exports,e=S.exports,n=_.exports;s.exports.getColor=function(a){if(!t.isSameCondOp(a,"color"))return;const u=n.getInt(`int;0;${e.colors.length-1}`);return e.colors[u]}})(E);var B={exports:{}};(function(s,f){const t=k.exports;s.exports.getCpf=function(e=!0){const[n,a,u,l,i,o,r,c,m]=Array.from(Array(9),function(){return Math.round(Math.random()*9)}),d=(n*10+a*9+u*8+l*7+i*6+o*5+r*4+c*3+m*2)%11,g=d<2?0:11-d,x=(n*11+a*10+u*9+l*8+i*7+o*6+r*5+c*4+m*3+g*2)%11,v=x<2?0:11-x;return e?`${n}${a}${u}.${l}${i}${o}.${r}${c}${m}-${g}${v}`:`${n}${a}${u}${l}${i}${o}${r}${c}${m}${g}${v}`},s.exports.isValidCpf=function(e){if(typeof e!="string")return!1;const n=t.onlyNumbers(e);if(n.length!==11)return!1;const[a,u,l,i,o,r,c,m,d,g,x]=[...n].map(function(p){return parseInt(p,10)}),v=(a*10+u*9+l*8+i*7+o*6+r*5+c*4+m*3+d*2)%11,b=v<2?0:11-v,h=(a*11+u*10+l*9+i*8+o*7+r*6+c*5+m*4+d*3+b*2)%11,q=h<2?0:11-h;return b===g&&q===x}})(B);var G={exports:{}};(function(s,f){const t=y.exports;s.exports.getFloat=function(e){if(!t.isSameCondOp(e,"float"))return;const n=0,a=Number.MAX_SAFE_INTEGER/100,u=2,l=t.getParams(e),i=parseFloat(l[1]),o=parseFloat(l[2]),r=parseFloat(l[3]),c=i||n,m=o||a,d=r||u,g=c+Math.random()*(m+1-c);return parseFloat(g.toFixed(d))}})(G);var J={exports:{}};(function(s,f){const t=y.exports;s.exports.getGender=function(e){if(!t.isSameCondOp(e,"gender"))return;const n=Math.round(Math.random());return["male","female"][n]}})(J);var T={exports:{}},N={exports:{}},W={},z=Object.freeze({__proto__:null,default:W}),X=K(z);(function(s,f){const t=X,e=y.exports;s.exports.getStr=function(n){if(!e.isSameCondOp(n,"str"))return;const a=36,u=["ascii","utf8","utf16le","base64","binary","hex"],l="hex",i=e.getParams(n),o=parseInt(i[1],10),r=i[2],c=o||a,m=!!r&&u.includes(r)?r:l;return t.randomBytes(c).toString(m).substr(0,c)}})(N),function(s,f){const t=N.exports,e=_.exports,n=y.exports;s.exports.getId=function(r){if(!n.isSameCondOp(r,"id"))return;const c=24,m="string",d=["string","int","objectId","guid"],g=n.getParams(r),x=g[1],v=parseInt(g[2],10),b=x&&d.includes(x)?x:m;return a(b,v||c)};function a(r,c){return{string:function(){return u(c)},int:function(){return l(c)},objectId:function(){return i()},guid:function(){return o()}}[r]()}function u(r){return t.getStr(`str;${r};hex`)}function l(r){return e.getInt(`int;;;${r}`)}function i(){return function(r=Math,c=Date,m=16,d=g=>r.floor(g).toString(m)){return d(c.now()/1e3)+" ".repeat(m).replace(/./g,function(){return d(r.random()*m)})}()}function o(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(r){var c=Math.random()*16|0,m=r==="x"?c:c&3|8;return m.toString(16)})}}(T);var j={exports:{}},R={exports:{}};(function(s,f){s.exports.isBetween=function(t,e,n){return t<=n&&n<=e},s.exports.isInteger=function(t){return Number.isInteger(t)}})(R),function(s,f){const t=y.exports,e=R.exports,n=_.exports;s.exports.getMaskInt=function(a){if(!t.isSameCondOp(a,"maskInt"))return;const u="####-####",i=a.split(";")[1];return[...i||u].map(function(m){if(m!=="#"){const d=parseInt(m,10);return e.isInteger(d)?d:m}return n.getInt("int;0;9")}).join("")}}(j);var U={exports:{}};(function(s,f){const t=y.exports,e=j.exports;s.exports.getMoney=function(n){if(!t.isSameCondOp(n,"money"))return;const a="R$ #.###,##",l=n.split(";")[1],i=l||a;return e.getMaskInt(`maskInt;${i}`)}})(U);var V={exports:{}};(function(s,f){const t=y.exports,e=S.exports.full_names_list,n=_.exports;s.exports.getFirstName=function(a){if(!t.isSameCondOp(a,"firstName"))return;const u=n.getInt("int;0;49");return e[u].split(" ")[0]},s.exports.getLastName=function(a){if(!t.isSameCondOp(a,"lastName"))return;const u=n.getInt("int;0;49");return e[u].split(" ")[1]},s.exports.getFullName=function(a){if(!t.isSameCondOp(a,"fullName"))return;const u=t.getParams(a),l=u[1],i=u[2],o=n.getInt("int;0;49"),r=e[o].split(" ");return l&&(r[0]=l),i&&(r[1]=i),r.join(" ")}})(V);var L={exports:{}},D={exports:{}};(function(s,f){s.exports.isValidJsonStr=function(t){try{return typeof JSON.parse(t)=="object"}catch{return!1}}})(D),function(s,f){const t=y.exports,e=D.exports,n=_.exports;s.exports.getRandom=function(a){if(!t.isSameCondOp(a,"random"))return;const l=t.getParams(a)[1];if(!l||!e.isValidJsonStr(l))return;const i=JSON.parse(l);if(!(i instanceof Array))return;const o=n.getInt(`int;0;${i.length-1}`);return i[o]}}(L);var H={exports:{}};(function(s,f){const t=_.exports,e=y.exports,n=k.exports,a=S.exports.lorem;s.exports.getText=function(i){if(!e.isSameCondOp(i,"text"))return;const o=1,r=5,c=6,m=e.getParams(i),d=parseInt(m[1],10),g=parseInt(m[2],10),x=parseInt(m[3],10),v=d||o,b=g||r,h=x||c;return Array.from(Array(v),function(){return l(b,h)}).join(`
`)};function u(i){const o=Array.from(Array(i),function(){const d=t.getInt(`int;0;${a.length}`);return a[d]}),r=n.onlyLetters(o[0]),c=n.onlyLetters(o[o.length-1]);return o[0]=n.capitalize(r),o[o.length-1]=c,o.join(" ").concat(".")}function l(i,o){return Array.from(Array(i),function(){return u(o)}).join(" ")}})(H),function(s,f){const t=P.exports,e=F.exports,n=E.exports,a=B.exports,u=G.exports,l=J.exports,i=T.exports,o=_.exports,r=j.exports,c=U.exports,m=V.exports,d=L.exports,g=N.exports,x=H.exports;s.exports={address:t,cnpj:e,color:n,cpf:a,float:u,gender:l,id:i,int:o,maskInt:r,money:c,name:m,random:d,str:g,text:x}}(O),function(s,f){const{cnpj:t,cpf:e,float:n,id:a,int:u,str:l,gender:i,name:o,maskInt:r,text:c,money:m,address:d,color:g,random:x}=O.exports,v=y.exports;s.exports={getJson:b,cnpj:t,cpf:e,float:n,id:a,int:u,str:l,gender:i,name:o,maskInt:r,text:c,money:m,address:d,color:g,random:x};function b(p){const $={};return Object.keys(p).forEach(function(C){$[C]=h(p[C])}),$}function h(p){if(typeof p=="string"){if(v.isValidCond(p))return q(p)}else if(p instanceof Array){if(p.length===2){const $=p[0];if(Number.isInteger($))return Array.from(Array($),function(){return h(p[1])})}return p.map($=>h($))}else if(p instanceof Object)return Object.keys(p).reduce((I,C)=>(I[C]=h(p[C]),I),{});return p}function q(p){const $=v.getKey(p);return{id:function(){return a.getId(p)},cnpj:function(){return t.getCnpj(p)},cpf:function(){return e.getCpf(p)},float:function(){return n.getFloat(p)},int:function(){return u.getInt(p)},str:function(){return l.getStr(p)},gender:function(){return i.getGender(p)},firstName:function(){return o.getFirstName(p)},lastName:function(){return o.getLastName(p)},fullName:function(){return o.getFullName(p)},maskInt:function(){return r.getMaskInt(p)},text:function(){return c.getText(p)},money:function(){return m.getMoney(p)},address:function(){return d.getAddress(p)},color:function(){return g.getColor(p)},random:function(){return x.getRandom(p)}}[$]()}}(w),function(s,f){const t=w.exports;s.exports={generateJson:function(e){return t.getJson(e)},getAddress:function(e=""){return t.address.getAddress(`address;${e}`)},getCnpj:function(e=!0){return t.cnpj.getCnpj(e)},getColor:function(){return t.color.getColor("color")},getCpf:function(e=!0){return t.cpf.getCpf(e)},getFloat:function(e=0,n=Number.MAX_SAFE_INTEGER,a=2){return t.float.getFloat(`float;${e};${n};${a}`)},getGender:function(){return t.gender.getGender("gender")},getId:function(e="objectId",n=12){return t.id.getId(`id;${e};${n}`)},getInt:function(e=0,n=Number.MAX_SAFE_INTEGER){return t.int.getInt(`int;${e};max`)},getMaskInt:function(e=""){return t.maskInt.getMaskInt(`maskInt;${e}`)},getMoney:function(e=""){return t.money.getMoney(`money;${e}`)},getFirstName:function(){return t.name.getFirstName("firstName")},getLastName:function(){return t.name.getLastName("lastName")},getFullName:function(e="",n=""){return t.name.getFullName(`fullName;${e};${n}`)},getRandom:function(e=[]){return t.random.getRandom(`random;${JSON.stringify(e)}`)},getStr:function(e=12,n="hex"){return t.str.getStr(`str;${e};${n}`)},getText:function(e=1,n=2,a=5){return t.text.getText(`text;${e};${n};${a}`)},isValidCpf:function(e){return t.cpf.isValidCpf(e)},isValidCnpj:function(e){return t.cnpj.isValidCnpj(e)}}}(A);const M={1:{children:1,jobs:2,people:1},2:{children:4,jobs:6,people:2},3:{children:8,jobs:24,people:4},4:{children:16,jobs:48,people:6},5:{children:32,jobs:96,people:12},6:{children:64,jobs:192,people:24},7:{children:128,jobs:384,people:48},8:{children:256,jobs:768,people:96}};function Z(s){let f=performance.now();const t=A.exports.generateJson({id:"id;objectId",children:[M[s].children,{name:"fullName",age:"int;0;10"}],currentJob:{title:"Developer",salary:"mask;"},jobs:[M[s].jobs,{title:'random;["developer", "medic", "teacher", "CEO"]',salary:"money",people:[M[s].people,{name:"fullName",age:"int;0;10",personalities:[3,{title:'random;["introvert", "leader", "scientist", "cowgirl"]'}]}]}],maxRunDistance:"float;1;20;1",cpf:"cpf",cnpj:"cnpj",pretendSalary:"money",age:"int;20;80",gender:"gender",firstName:"firstName",lastName:"lastName",phone:"maskInt;+55 (83) 9####-####",address:"address",hairColor:"color"});return JSON.stringify({timestamp:performance.now(),timeToGenerate:performance.now()-f,payload:t})}self.onconnect=function(s){console.log("leader connected");var f=s.ports[0];console.log(s);let t=[];f.onmessage=function(e){for(const n in e.data)if(n.includes("init")){const a=e.data[n];a.onmessage=function(u){const{id:l}=u.data;console.log(`got port from ${l}`),t.push(u.data.port)}}setInterval(function(){const a=new TextEncoder().encode(JSON.stringify(Z(4))),u=t.map(i=>new Uint8Array(a.byteLength)),l=performance.now();for(let i=0;i<a.byteLength;i++){const o=a[i];u.forEach(r=>{r[i]=o})}console.log("took",performance.now()-l),t.forEach((i,o)=>{i.postMessage(u[o],[u[o].buffer])})},100)}}})();
